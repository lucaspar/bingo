# ========
# Services
# ========
# inverted index service
apiVersion: v1
kind: Service
metadata:
  name: indexing
spec:
  selector:
    service: indexing
  ports:
    - name: inverted-index
      protocol: TCP
      port: 9966
      targetPort: 9966
---
# mongodb service
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: bingo
    service: indexing
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
# ====
# Pods
# ====

# storage for inverted index (mongodb)
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: sc-index
  labels:
    app: bingo
    service: indexing
reclaimPolicy: Retain
volumeBindingMode: Immediate
provisioner: kubernetes.io/aws-ebs
allowVolumeExpansion: true
parameters:
  type: io1
  iopsPerGB: "5"
  fsType: ext4
  encrypted: "false"
---
# inverted index (mongodb) statefulset
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 1
  template:
    metadata:
      labels:
        app: bingo
        service: indexing
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--smallfiles"
            - "--noprealloc"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "sc-index"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
# ======================
# Deployments / replicas
# ======================

# INDEXER
apiVersion: apps/v1
kind: Deployment
metadata:
  name: indexer-pod
spec:
  selector:
    matchLabels:
      app: bingo
      service: indexing
  replicas: 3
  template:
    metadata:
      labels:
        app: bingo
        service: indexing
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: service
                operator: In
                values:
                - indexing
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: service
                operator: In
                values:
                - indexing
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: indexer-container
        image: bingocrawler/indexer:latest
