# ========
# SERVICES
# ========
# crawling service
apiVersion: v1
kind: Service
metadata:
  name: crawling
spec:
  selector:
    service: crawling
  ports:
    - name: balancer
      protocol: TCP
      port: 9966
      targetPort: 9966
---
# ====
# PODS
# ====
# url-map (redis) pod
apiVersion: v1
kind: Pod
metadata:
  name: url-map-pod
  labels:
    app: bingo
    service: crawling
spec:
  volumes:
    - name: urlmap-storage
      persistentVolumeClaim:
        claimName: pvc-urlmap
  containers:
  - name: url-map
    image: redis:latest
    volumeMounts:
    - name: urlmap-storage
      mountPath: /data
      subPath: urlmap
---
# domain balancer
apiVersion: v1
kind: Pod
metadata:
  name: domain-balancer-pod
  labels:
    app: bingo
    service: crawling
spec:
  containers:
  - name: domain-balancer
    image: bingocrawler/domain-balancer:latest
---
# =======
# STORAGE
# =======
# storage class for aws deploy
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: sc-aws
  labels:
    app: bingo
    service: crawling
reclaimPolicy: Retain
provisioner: kubernetes.io/aws-ebs
allowVolumeExpansion: true
parameters:
  type: io1
  iopsPerGB: "10"
  fsType: ext4
  encrypted: "false"
---
# storage class for local deploy
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: sc-local
  labels:
    app: bingo
    service: crawling
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
reclaimPolicy: Retain
allowVolumeExpansion: true
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-local
spec:
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: sc-local
  local:
    path: /mnt/disks/vol1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube
---
# persistent volume claim for url-map (redis)
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-urlmap
  labels:
    app: bingo
    service: crawling
spec:
  accessModes: [ReadWriteOnce]
# CHANGE WHEN IN AWS:
  storageClassName: 'sc-local'
# storageClassName: 'sc-aws'
  resources:
    requests:
      storage: 10Gi
---
# ======================
# DEPLOYMENTS / REPLICAS
# ======================
# CRAWLER
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crawler-pod
spec:
  selector:
    matchLabels:
      app: bingo
      service: crawling
  replicas: 3
  template:
    metadata:
      labels:
        app: bingo
        service: crawling
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: service
                operator: In
                values:
                - crawling
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: service
                operator: In
                values:
                - crawling
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: crawler-container
        image: bingocrawler/crawler:latest
